# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        global-json-file: global.json
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Upload output file
      uses: actions/upload-artifact@v3.1.2
      with:
        name: build-output
        path: /home/runner/work/priceService/priceService
  test:
  
    runs-on: ubuntu-latest
    needs: build
  
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: build-output
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json
      - name: Restore dependencies
        run: dotnet restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
  
  buildAndPushImage:
  
    runs-on: ubuntu-latest
    needs: [build, test]
    
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker image
        run: docker build . --tag ghcr.io/terhunters/price-service:latest
      - name: Push Docker image
        run: docker push ghcr.io/terhunters/price-service:latest
        
  deployToKubernetes:
  
    runs-on: ubuntu-latest
    needs: buildAndPushImage
    
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f ./k8s/price-depl.yaml
      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout restart deployment price-depl
